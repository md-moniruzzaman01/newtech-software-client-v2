import { useParams } from "react-router-dom";
import { ComplaintsOrderDetailsProps } from "./config/types";
import { useEffect, useState } from "react";
import { getFromLocalStorage } from "../../../shared/helpers/local_storage";
import { authKey, emptyData } from "../../../shared/config/constaints";
import Navbar from "../../../common/widgets/Navbar/Navbar";
import ComplaintHeaderCard from "../../../common/components/ComplaintHeaderCard/ComplaintHeaderCard";
import ComplaintDetailsCard from "../../../common/components/ComplaintDetailsCard/ComplaintDetailsCard";

import { MdModeEdit } from "react-icons/md";
import { useGetBillByIdQuery } from "../../../redux/features/api/service";
import LoadingPage from "../../../common/components/LoadingPage/LoadingPage";
import ComplaintOrderDetailsTable from "./partials/ComplaintOrderDetailsTable";
import { findBranch } from "../../../shared/helpers/findBranch";
import TransactionDetailsCard from "./partials/Transaction Card/TransactionDetailsCard";
import { IoIosArrowDown, IoIosArrowUp } from "react-icons/io";

const ComplaintsServicePayment = () => {
  const { id } = useParams();
  const [isEdit, setIsEdit] = useState(true);
  const [isOpen, setIsOpen] = useState(false);

  const [billSingleData, setBillSingleData] =
    useState<ComplaintsOrderDetailsProps | null>(null);
  const token = getFromLocalStorage(authKey);
  const {
    data: billData,
    isError: billError,
    isLoading: BillLoading,
  } = useGetBillByIdQuery({ id, token });

  useEffect(() => {
    if (!billError && !BillLoading) {
      setBillSingleData(billData?.data);
    }
  }, [billData, billError, BillLoading]);
  console.log(billData);
  if (BillLoading) {
    return <LoadingPage />;
  }
  return (
    <div className="px-5">
      <Navbar name={"Complaint's Service Payments"} />

      <div className="grid grid-cols-4 gap-2 pt-8">
        <ComplaintHeaderCard
          headerDetails={billSingleData?.createdAt.toString().slice(0, 10)}
          bgColor="primary"
          headerTitle="Created Date"
        />
        <ComplaintHeaderCard
          headerDetails={billSingleData?.id}
          bgColor="primary"
          headerTitle="ID"
        />
        <ComplaintHeaderCard
          headerDetails={findBranch(billSingleData?.branch) || emptyData}
          bgColor="primary"
          headerTitle="Branch"
        />

        <ComplaintHeaderCard
          headerDetails={billSingleData?.status}
          bgColor="primary"
          headerTitle="Status
          "
        />
      </div>

      <div className="grid grid-cols-3 gap-2 py-3">
        <ComplaintDetailsCard
          headerTitle="Customer Details"
          CardInformation={[
            { title: "Name", value: billSingleData?.customer?.name },
            { title: "Address", value: billSingleData?.customer?.email },
          ]}
        />
        <ComplaintDetailsCard
          headerTitle="Generated By"
          CardInformation={[
            { title: "ID", value: billSingleData?.generatedby?.id },
            {
              title: "Name",
              value: `${
                billSingleData?.generatedby?.Engineer?.name?.firstName ||
                emptyData
              }  `,
            },
          ]}
        />
        <ComplaintDetailsCard
          headerTitle="Repair Details"
          CardInformation={[
            { title: "ID", value: billSingleData?.id },
            { title: "Repair Count", value: billSingleData?.repair?.length },
          ]}
        />
        <div className="col-span-3 rounded-md">
          <button
            onClick={() => setIsOpen(!isOpen)}
            className="w-full flex justify-between px-5 py-3 bg-solidWhite shadow-md"
          >
            <h5 className="text-xl font-semibold">Transaction Details</h5>
            <p>{isOpen ? <IoIosArrowUp /> : <IoIosArrowDown />}</p>
          </button>
          <div
            className={`transition-all duration-1000 overflow-hidden pt-2 ${
              isOpen ? "max-h-[1000px] opacity-100" : "max-h-0 opacity-0"
            }`}
          >
            <TransactionDetailsCard
              transactionData={billSingleData?.transaction}
            />
          </div>
        </div>
      </div>
      <div className=" bg-solidWhite px-5 py-3">
        <div className="flex justify-between  py-2 ">
          <h2 className="text-2xl font-semibold">Order Summery</h2>
          <div
            className={`cursor-pointer hover:text-shadeOfRed ${
              !isEdit && "text-shadeOfRed"
            }`}
          >
            <MdModeEdit onClick={() => setIsEdit(!isEdit)} />
          </div>
        </div>
        <ComplaintOrderDetailsTable isEdit={isEdit} id={id} />
      </div>
    </div>
  );
};

export default ComplaintsServicePayment;
